// Sheet
exports.sheet = () => {

	return [
		{
			title: "Error",
			items: [
				{
					title: "Functions",
					values: [
						"debug_backtrace()",
						"debug_print_backtrace()",
						"error_get_last()",
						"error_log()",
						"error_reporting()",
						"restore_error_handler()",
						"restore_exception_handler()",
						"set_error_handler()",
						"set_exception_handler()",
						"trigger_error()",
						"user_error()"
					]
				},
				{
					title: "Constants",
					values: [
						"E_ERROR",
						"E_WARNING",
						"E_PARSE",
						"E_NOTICE",
						"E_CORE_ERROR",
						"E_CORE_WARNING",
						"E_COMPILE_ERROR",
						"E_COMPILE_WARNING",
						"E_USER_ERROR",
						"E_USER_WARNING",
						"E_USER_NOTICE",
						"E_STRICT",
						"E_RECOVERABLE_ERROR",
						"E_ALL"
					]
				}
			]
		},
		{
			title: "FTP",
			items: [
				{
					title: "Functions",
					values: [
						"ftp_alloc()",
						"ftp_cdup()",
						"ftp_chdir()",
						"ftp_chmod()",
						"ftp_close()",
						"ftp_connect()",
						"ftp_delete()",
						"ftp_exec()",
						"ftp_fget()",
						"ftp_fput()",
						"ftp_get_option()",
						"ftp_get()",
						"ftp_login()",
						"ftp_mdtm()",
						"ftp_mkdir()",
						"ftp_nb_continue()",
						"ftp_nb_fget()",
						"ftp_nb_fput()",
						"ftp_nb_get()",
						"ftp_nb_put()",
						"ftp_nlist()",
						"ftp_pasv()",
						"ftp_put()",
						"ftp_pwd()",
						"ftp_quit()",
						"ftp_raw()",
						"ftp_rawlist()",
						"ftp_rename()",
						"ftp_rmdir()",
						"ftp_set_option()",
						"ftp_site()",
						"ftp_size()",
						"ftp_ssl_connect()",
						"ftp_systype()"
					]
				},
				{
					title: "Constants",
					values: [
						"FTP_ASCII",
						"FTP_TEXT",
						"FTP_BINARY",
						"FTP_IMAGE",
						"FTP_TIMEOUT_SEC",
						"FTP_AUTOSEEK",
						"FTP_AUTORESUME",
						"FTP_FAILED",
						"FTP_FINISHED",
						"FTP_MOREDATA"
					]
				}
			]
		},
		{
			title: "OOP",
			items: [
				{
					title: "Magic Methods",
					values: [
						"__construct()",
						"__destruct()",
						"__callStatic()",
						"__call()",
						"__get()",
						"__set()",
						"__isset()",
						"__unset()",
						"__sleep()",
						"__wakeup()",
						"__toString()",
						"__invoke()",
						"__set_state()",
						"__clone()"
					]
				}
			]
		},
		{
			title: "Array",
			items: [
				{
					title: "Functions",
					values: [
						"array()",
						"array_change_key_case()",
						"array_chunk()",
						"array_combine()",
						"array_count_values()",
						"array_diff()",
						"array_diff_assoc()",
						"array_diff_key()",
						"array_diff_uassoc()",
						"array_diff_ukey()",
						"array_fill()",
						"array_filter()",
						"array_flip()",
						"array_intersect()",
						"array_intersect_assoc()",
						"array_intersect_key()",
						"array_intersect_uassoc()",
						"array_intersect_ukey()",
						"array_key_exists()",
						"array_keys()",
						"array_map()",
						"array_merge()",
						"array_merge_recursive()",
						"array_multisort()",
						"array_pad()",
						"array_pop()",
						"array_product()",
						"array_push()",
						"array_rand()",
						"array_reduce()",
						"array_reverse()",
						"array_search()",
						"array_shift()",
						"array_slice()",
						"array_splice()",
						"array_sum()",
						"array_udiff()",
						"array_udiff_assoc()",
						"array_udiff_uassoc()",
						"array_uintersect()",
						"array_uintersect_assoc()",
						"array_uintersect_uassoc()",
						"array_unique()",
						"array_unshift()",
						"array_values()",
						"array_walk()",
						"array_walk_recursive()",
						"arsort()",
						"asort()",
						"compact()",
						"count()",
						"current()",
						"each()",
						"end()",
						"extract()",
						"in_array()",
						"key()",
						"krsort()",
						"ksort()",
						"list()",
						"natcasesort()",
						"natsort()",
						"next()",
						"pos()",
						"prev()",
						"range()",
						"reset()",
						"rsort()",
						"shuffle()",
						"sizeof()",
						"sort()",
						"uasort()",
						"uksort()",
						"usort()"
					]
				},
				{
					title: "Constants",
					values: [
						"CASE_LOWER",
						"CASE_UPPER",
						"SORT_ASC",
						"SORT_DESC",
						"SORT_REGULAR",
						"SORT_NUMERIC",
						"SORT_STRING",
						"SORT_LOCALE_STRING",
						"COUNT_NORMAL",
						"COUNT_RECURSIVE",
						"EXTR_OVERWRITE",
						"EXTR_SKIP",
						"EXTR_PREFIX_SAME",
						"EXTR_PREFIX_ALL",
						"EXTR_PREFIX_INVALID",
						"EXTR_PREFIX_IF_EXISTS",
						"EXTR_IF_EXISTS",
						"EXTR_REFS"
					]
				}
			]
		},
		{
			title: "HTTP",
			items: [
				{
					title: "Functions",
					values: [
						"header()",
						"headers_list()",
						"headers_sent()",
						"setcookie()",
						"setrawcookie()"
					]
				}
			]
		},
		{
			title: "Mail",
			items: [
				{
					title: "Functions",
					values: [
						"ezmlm_hash()",
						"mail()"
					]
				}
			]
		},
		{
			title: "MySQLi",
			items: [
				{
					title: "MySQLi Class",
					values: [
						"mysqli::$affected_rows",
						"mysqli::autocommit()",
						"mysqli::change_user()",
						"mysqli::character_set_name()",
						"mysqli::$client_info",
						"mysqli::$client_version",
						"mysqli::close()",
						"mysqli::commit()",
						"mysqli::$connect_errno",
						"mysqli::$connect_error",
						"mysqli::__construct()",
						"mysqli::debug()",
						"mysqli::dump_debug_info()",
						"mysqli::$errno",
						"mysqli::$error_list",
						"mysqli::$error",
						"mysqli::$field_count",
						"mysqli::get_charset()",
						"mysqli::get_client_info()",
						"mysqli_get_client_stats()",
						"mysqli_get_client_version()",
						"mysqli::get_connection_stats()",
						"mysqli::$host_info",
						"mysqli::$protocol_version",
						"mysqli::$server_info",
						"mysqli::$server_version",
						"mysqli::get_warnings()",
						"mysqli::$info",
						"mysqli::init()",
						"mysqli::$insert_id",
						"mysqli::kill()",
						"mysqli::more_results()",
						"mysqli::multi_query()",
						"mysqli::next_result()",
						"mysqli::options()",
						"mysqli::ping()",
						"mysqli::poll()",
						"mysqli::prepare()",
						"mysqli::query()",
						"mysqli::real_connect()",
						"mysqli::real_escape_string()",
						"mysqli::real_query()",
						"mysqli::reap_async_query()",
						"mysqli::refresh()",
						"mysqli::rollback()",
						"mysqli::rpl_query_type()",
						"mysqli::select_db()",
						"mysqli::send_query()",
						"mysqli::set_charset()",
						"mysqli::set_local_infile_default()",
						"mysqli::set_local_infile_handler()",
						"mysqli::$sqlstate",
						"mysqli::ssl_set()",
						"mysqli::stat()",
						"mysqli::stmt_init()",
						"mysqli::store_result()",
						"mysqli::$thread_id",
						"mysqli::thread_safe()",
						"mysqli::use_result()",
						"mysqli::$warning_count"
					]
				},
				{
					title: "MySQLi STMT Class",
					values: [
						"mysqli_stmt::$affected_rows",
						"mysqli_stmt::attr_get()",
						"mysqli_stmt::attr_set()",
						"mysqli_stmt::bind_param()",
						"mysqli_stmt::bind_result()",
						"mysqli_stmt::close()",
						"mysqli_stmt::data_seek()",
						"mysqli_stmt::$errno",
						"mysqli_stmt::$error_list",
						"mysqli_stmt::$error",
						"mysqli_stmt::execute()",
						"mysqli_stmt::fetch()",
						"mysqli_stmt::$field_count",
						"mysqli_stmt::free_result()",
						"mysqli_stmt::get_result()",
						"mysqli_stmt::get_warnings()",
						"mysqli_stmt::$insert_id",
						"mysqli_stmt::more_results()",
						"mysqli_stmt::next_result()",
						"mysqli_stmt::$num_rows",
						"mysqli_stmt::$param_count",
						"mysqli_stmt::prepare()",
						"mysqli_stmt::reset()",
						"mysqli_stmt::result_metadata()",
						"mysqli_stmt::send_long_data()",
						"mysqli_stmt::$sqlstate",
						"mysqli_stmt::store_result()"
					]
				},
				{
					title: "MySQLi Result Class",
					values: [
						"mysqli_result::$current_field",
						"mysqli_result::data_seek()",
						"mysqli_result::fetch_all()",
						"mysqli_result::fetch_array()",
						"mysqli_result::fetch_assoc()",
						"mysqli_result::fetch_field_direct()",
						"mysqli_result::fetch_field()",
						"mysqli_result::fetch_fields()",
						"mysqli_result::fetch_object()",
						"mysqli_result::fetch_row()",
						"mysqli_result::$field_count",
						"mysqli_result::field_seek()",
						"mysqli_result::free()",
						"mysqli_result::$lengths",
						"mysqli_result::$num_rows"
					]
				},
				{
					title: "MySQLi Driver Class",
					values: [
						"mysqli_driver::embedded_server_end()",
						"mysqli_driver::embedded_server_start()",
						"mysqli_driver::$report_mode",
						"mysqli_driver::$client_info",
						"mysqli_driver::$client_version",
						"mysqli_driver::$driver_version",
						"mysqli_driver::$embedded",
						"mysqli_driver::$reconnect",
						"mysqli_driver::$report_mode"
					]
				},
				{
					title: "MySQLi Warning Class",
					values: [
						"mysqli_warning::__construct()",
						"mysqli_warning::next()",
						"mysqli_warning::$message",
						"mysqli_warning::$sqlstate",
						"mysqli_warning::$errno"
					]
				},
				{
					title: "MySQLi Constants",
					values: [
						"MYSQLI_READ_DEFAULT_GROUP",
						"MYSQLI_READ_DEFAULT_FILE",
						"MYSQLI_OPT_CONNECT_TIMEOUT",
						"MYSQLI_OPT_LOCAL_INFILE",
						"MYSQLI_INIT_COMMAND",
						"MYSQLI_CLIENT_SSL",
						"MYSQLI_CLIENT_COMPRESS",
						"MYSQLI_CLIENT_INTERACTIVE",
						"MYSQLI_CLIENT_IGNORE_SPACE",
						"MYSQLI_CLIENT_NO_SCHEMA",
						"MYSQLI_CLIENT_MULTI_QUERIES",
						"MYSQLI_STORE_RESULT",
						"MYSQLI_USE_RESULT",
						"MYSQLI_ASSOC",
						"MYSQLI_NUM",
						"MYSQLI_BOTH",
						"MYSQLI_NOT_NULL_FLAG",
						"MYSQLI_PRI_KEY_FLAG",
						"MYSQLI_UNIQUE_KEY_FLAG",
						"MYSQLI_MULTIPLE_KEY_FLAG",
						"MYSQLI_BLOB_FLAG",
						"MYSQLI_UNSIGNED_FLAG",
						"MYSQLI_ZEROFILL_FLAG",
						"MYSQLI_AUTO_INCREMENT_FLAG",
						"MYSQLI_TIMESTAMP_FLAG",
						"MYSQLI_SET_FLAG",
						"MYSQLI_NUM_FLAG",
						"MYSQLI_PART_KEY_FLAG",
						"MYSQLI_GROUP_FLAG",
						"MYSQLI_TYPE_DECIMAL",
						"MYSQLI_TYPE_NEWDECIMAL",
						"MYSQLI_TYPE_BIT",
						"MYSQLI_TYPE_TINY",
						"MYSQLI_TYPE_SHORT",
						"MYSQLI_TYPE_LONG",
						"MYSQLI_TYPE_FLOAT",
						"MYSQLI_TYPE_DOUBLE",
						"MYSQLI_TYPE_NULL",
						"MYSQLI_TYPE_TIMESTAMP",
						"MYSQLI_TYPE_LONGLONG",
						"MYSQLI_TYPE_INT24",
						"MYSQLI_TYPE_DATE",
						"MYSQLI_TYPE_TIME",
						"MYSQLI_TYPE_DATETIME",
						"MYSQLI_TYPE_YEAR",
						"MYSQLI_TYPE_NEWDATE",
						"MYSQLI_TYPE_INTERVAL",
						"MYSQLI_TYPE_ENUM",
						"MYSQLI_TYPE_SET",
						"MYSQLI_TYPE_TINY_BLOB",
						"MYSQLI_TYPE_MEDIUM_BLOB",
						"MYSQLI_TYPE_LONG_BLOB",
						"MYSQLI_TYPE_BLOB",
						"MYSQLI_TYPE_VAR_STRING",
						"MYSQLI_TYPE_STRING",
						"MYSQLI_TYPE_CHAR",
						"MYSQLI_TYPE_GEOMETRY",
						"MYSQLI_NEED_DATA",
						"MYSQLI_NO_DATA",
						"MYSQLI_DATA_TRUNCATED",
						"MYSQLI_ENUM_FLAG",
						"MYSQLI_CURSOR_TYPE_FOR_UPDATE",
						"MYSQLI_CURSOR_TYPE_NO_CURSOR",
						"MYSQLI_CURSOR_TYPE_READ_ONLY",
						"MYSQLI_CURSOR_TYPE_SCROLLABLE",
						"MYSQLI_STMT_ATTR_CURSOR_TYPE",
						"MYSQLI_STMT_ATTR_PREFETCH_ROWS",
						"MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH",
						"MYSQLI_SET_CHARSET_NAME",
						"MYSQLI_REPORT_INDEX",
						"MYSQLI_REPORT_ERROR",
						"MYSQLI_REPORT_STRICT",
						"MYSQLI_REPORT_ALL",
						"MYSQLI_REPORT_OFF",
						"MYSQLI_DEBUG_TRACE_ENABLED",
						"MYSQLI_SERVER_QUERY_NO_GOOD_INDEX_USED",
						"MYSQLI_SERVER_QUERY_NO_INDEX_USED",
						"MYSQLI_REFRESH_GRANT",
						"MYSQLI_REFRESH_LOG",
						"MYSQLI_REFRESH_TABLES",
						"MYSQLI_REFRESH_HOSTS",
						"MYSQLI_REFRESH_STATUS",
						"MYSQLI_REFRESH_THREADS",
						"MYSQLI_REFRESH_SLAVE",
						"MYSQLI_REFRESH_MASTER"
					]
				}
			]
		},
		{
			title: "String",
			items: [
				{
					title: "Functions",
					values: [
						"addcslashes()",
						"addslashes()",
						"bin2hex()",
						"chop()",
						"chr()",
						"chunk_split()",
						"convert_cyr_string()",
						"convert_uudecode()",
						"convert_uuencode()",
						"count_chars()",
						"crc32()",
						"crypt()",
						"echo()",
						"explode()",
						"fprintf()",
						"get_html_translation_table()",
						"hebrev()",
						"hebrevc()",
						"html_entity_decode()",
						"htmlentities()",
						"htmlspecialchars_decode()",
						"htmlspecialchars()",
						"implode()",
						"join()",
						"levenshtein()",
						"localeconv()",
						"ltrim()",
						"md5()",
						"md5_file()",
						"metaphone()",
						"money_format()",
						"nl_langinfo()",
						"nl2br()",
						"number_format()",
						"ord()",
						"parse_str()",
						"print()",
						"printf()",
						"quoted_printable_decode()",
						"quotemeta()",
						"rtrim()",
						"setlocale()",
						"sha1()",
						"sha1_file()",
						"similar_text()",
						"soundex()",
						"sprintf()",
						"sscanf()",
						"str_ireplace()",
						"str_pad()",
						"str_repeat()",
						"str_replace()",
						"str_rot13()",
						"str_shuffle()",
						"str_split()",
						"str_word_count()",
						"strcasecmp()",
						"strchr()",
						"strcmp()",
						"strcoll()",
						"strcspn()",
						"strip_tags()",
						"stripcslashes()",
						"stripslashes()",
						"stripos()",
						"stristr()",
						"strlen()",
						"strnatcasecmp()",
						"strnatcmp()",
						"strncasecmp()",
						"strncmp()",
						"strpbrk()",
						"strpos()",
						"strrchr()",
						"strrev()",
						"strripos()",
						"strrpos()",
						"strspn()",
						"strstr()",
						"strtok()",
						"strtolower()",
						"strtoupper()",
						"strtr()",
						"substr()",
						"substr_compare()",
						"substr_count()",
						"substr_replace()",
						"trim()",
						"ucfirst()",
						"ucwords()",
						"vfprintf()",
						"vprintf()",
						"vsprintf()",
						"wordwrap()"
					]
				},
				{
					title: "Constants",
					values: [
						"CRYPT_SALT_LENGTH",
						"CRYPT_STD_DES",
						"CRYPT_EXT_DES",
						"CRYPT_MD5",
						"CRYPT_BLOWFISH",
						"HTML_SPECIALCHARS",
						"HTML_ENTITIES",
						"ENT_COMPAT",
						"ENT_QUOTES",
						"ENT_NOQUOTES",
						"CHAR_MAX",
						"LC_CTYPE",
						"LC_NUMERIC",
						"LC_TIME",
						"LC_COLLATE",
						"LC_MONETARY",
						"LC_ALL",
						"LC_MESSAGES",
						"STR_PAD_LEFT",
						"STR_PAD_RIGHT",
						"STR_PAD_BOTH"
					]
				}
			]
		},
		{
			title: "Simple XML",
			items: [
				{
					title: "Functions",
					values: [
						"__construct()",
						"addAttribute()",
						"vaddChild()",
						"asXML()",
						"attributes()",
						"children()",
						"getDocNamespaces()",
						"getName()",
						"getNamespace()",
						"registerXPathNamespace()",
						"simplexml_import_dom()",
						"simplexml_load_file()",
						"simplexml_load_string()",
						"xpath()"
					]
				}
			]
		},
		{
			title: "Zip",
			items: [
				{
					title: "Functions",
					values: [
						"zip_close()",
						"zip_entry_close()",
						"zip_entry_compressedsize()",
						"zip_entry_compressionmethod()",
						"zip_entry_filesize()",
						"zip_entry_name()",
						"zip_entry_open()",
						"zip_entry_read()",
						"zip_open()",
						"zip_read()"
					]
				}
			]
		},
		{
			title: "Variable",
			items: [
				{
					title: "Handling Functions",
					values: [
						"boolval",
						"debug_zval_dump",
						"doubleval",
						"empty",
						"floatval",
						"get_defined_vars",
						"get_resource_type",
						"gettype",
						"import_request_variables",
						"intval",
						"is_array",
						"is_bool",
						"is_callable",
						"is_double",
						"is_float",
						"is_int",
						"is_integer",
						"is_long",
						"is_null",
						"is_numeric",
						"is_object",
						"is_real",
						"is_resource",
						"is_scalar",
						"is_string",
						"isset",
						"print_r",
						"serialize",
						"settype",
						"strval",
						"unserialize",
						"unset",
						"var_dump",
						"var_export"
					]
				}
			]
		},
		{
			title: "File System",
			items: [
				{
					title: "Functions",
					values: [
						"basename()",
						"chgrp()",
						"chmod()",
						"chown()",
						"clearstatcache()",
						"copy()",
						"delete()",
						"dirname()",
						"disk_free_space()",
						"disk_total_space()",
						"diskfreespace()",
						"fclose()",
						"feof()",
						"fflush()",
						"fgetc()",
						"fgetcsv()",
						"fgets()",
						"fgetss()",
						"file()",
						"file_exists()",
						"file_get_contents()",
						"file_put_contents",
						"fileatime()",
						"filectime()",
						"filegroup()",
						"fileinode()",
						"filemtime()",
						"fileowner()",
						"fileperms()",
						"filesize()",
						"filetype()",
						"flock()",
						"fnmatch()",
						"fopen()",
						"fpassthru()",
						"fputcsv()",
						"fputs()",
						"fread()",
						"fscanf()",
						"fseek()",
						"fstat()",
						"ftell()",
						"ftruncate()",
						"fwrite()",
						"glob()",
						"is_dir()",
						"is_executable()",
						"is_file()",
						"is_link()",
						"is_readable()",
						"is_uploaded_file()",
						"is_writable()",
						"is_writeable()",
						"link()",
						"linkinfo()",
						"lstat()",
						"mkdir()",
						"move_uploaded_file()",
						"parse_ini_file()",
						"pathinfo()",
						"pclose()",
						"popen()",
						"readfile()",
						"readlink()",
						"realpath()",
						"rename()",
						"rewind()",
						"rmdir()",
						"set_file_buffer()",
						"stat()",
						"symlink()",
						"tempnam()",
						"tmpfile()",
						"touch()",
						"umask()",
						"unlink()"
					]
				},
				{
					title: "Constants",
					values: [
						"GLOB_BRACE",
						"GLOB_ONLYDIR",
						"GLOB_MARK",
						"GLOB_NOSORT",
						"GLOB_NOCHECK",
						"GLOB_NOESCAPE",
						"PATHINFO_DIRNAME",
						"PATHINFO_BASENAME",
						"PATHINFO_EXTENSION",
						"FILE_USE_INCLUDE_PATH",
						"FILE_APPEND",
						"FILE_IGNORE_NEW_LINES",
						"FILE_SKIP_EMPTY_LINES"
					]
				}
			]
		},
		{
			title: "Misc",
			items: [
				{
					title: "Functions",
					values: [
						"connection_aborted()",
						"connection_status()",
						"connection_timeout()",
						"constant()",
						"define()",
						"defined()",
						"die()",
						"eval()",
						"exit()",
						"get_browser()",
						"highlight_file()",
						"highlight_string()",
						"ignore_user_abort()",
						"pack()",
						"php_check_syntax()",
						"php_strip_whitespace()",
						"show_source()",
						"sleep()",
						"time_nanosleep()",
						"time_sleep_until()",
						"uniqid()",
						"unpack()",
						"usleep()"
					]
				},
				{
					title: "Constants",
					values: [
						"CONNECTION_ABORTED",
						"CONNECTION_NORMAL",
						"CONNECTION_TIMEOUT",
						"__COMPILER_HALT_OFFSET__"
					]
				}
			]
		},
		{
			title: "Date Time",
			items: [
				{
					title: "Functions",
					values: [
						"checkdate()",
						"date_default_timezone_get()",
						"date_default_timezone_set()",
						"date_sunrise()",
						"date_sunset()",
						"date()",
						"getdate()",
						"gettimeofday()",
						"gmdate()",
						"gmmktime()",
						"gmstrftime()",
						"idate()",
						"localtime()",
						"microtime()",
						"mktime()",
						"strftime()",
						"strptime()",
						"strtotime()",
						"time()"
					]
				},
				{
					title: "Constants",
					values: [
						"DATE_ATOM",
						"DATE_COOKIE",
						"DATE_ISO8601",
						"DATE_RFC822",
						"DATE_RFC850",
						"DATE_RFC1036",
						"DATE_RFC1123",
						"DATE_RFC2822",
						"DATE_RSS",
						"DATE_W3C"
					]
				}
			]
		},
		{
			title: "Filter",
			items: [
				{
					title: "Functions",
					values: [
						"filter_has_var()",
						"filter_id()",
						"filter_input()",
						"filter_input_array()",
						"filter_list()",
						"filter_var_array()",
						"filter_var()"
					]
				},
				{
					title: "Filters",
					values: [
						"FILTER_CALLBACK",
						"FILTER_SANITIZE_STRING",
						"FILTER_SANITIZE_STRIPPED",
						"FILTER_SANITIZE_ENCODED",
						"FILTER_SANITIZE_SPECIAL_CHARS",
						"FILTER_SANITIZE_EMAIL",
						"FILTER_SANITIZE_URL",
						"FILTER_SANITIZE_NUMBER_INT",
						"FILTER_SANITIZE_NUMBER_FLOAT",
						"FILTER_SANITIZE_MAGIC_QUOTES",
						"FILTER_UNSAFE_RAW",
						"FILTER_VALIDATE_INT",
						"FILTER_VALIDATE_BOOLEAN",
						"FILTER_VALIDATE_FLOAT",
						"FILTER_VALIDATE_REGEXP",
						"FILTER_VALIDATE_URL",
						"FILTER_VALIDATE_EMAIL",
						"FILTER_VALIDATE_IP"
					]
				}
			]
		},
		{
			title: "Calendar",
			items: [
				{
					title: "Functions",
					values: [
						"cal_days_in_month()",
						"cal_from_jd()",
						"cal_info()",
						"cal_to_jd()",
						"easter_date()",
						"easter_days()",
						"FrenchToJD()",
						"GregorianToJD()",
						"JDDayOfWeek()",
						"JDMonthName()",
						"JDToFrench()",
						"JDToGregorian()",
						"jdtojewish()",
						"JDToJulian()",
						"jdtounix()",
						"JewishToJD()",
						"JulianToJD()",
						"unixtojd()"
					]
				},
				{
					title: "Constants",
					values: [
						"CAL_GREGORIAN",
						"CAL_JULIAN",
						"CAL_JEWISH",
						"CAL_FRENCH",
						"CAL_NUM_CALS",
						"CAL_DOW_DAYNO",
						"CAL_DOW_SHORT",
						"CAL_DOW_LONG",
						"CAL_MONTH_GREGORIAN_SHORT",
						"CAL_MONTH_GREGORIAN_LONG",
						"CAL_MONTH_JULIAN_SHORT",
						"CAL_MONTH_JULIAN_LONG",
						"CAL_MONTH_JEWISH",
						"CAL_MONTH_FRENCH",
						"CAL_EASTER_DEFAULT",
						"CAL_EASTER_ROMAN",
						"CAL_EASTER_ALWAYS_GREGORIAN",
						"CAL_EASTER_ALWAYS_JULIAN",
						"CAL_JEWISH_ADD_ALAFIM_GERESH",
						"CAL_JEWISH_ADD_ALAFIM",
						"CAL_JEWISH_ADD_GERESHAYIM"
					]
				}
			]
		},
		{
			title: "XML Parser",
			items: [
				{
					title: "Functions",
					values: [
						"utf8_decode()",
						"utf8_encode()",
						"xml_error_string()",
						"xml_get_current_byte_index()",
						"xml_get_current_column_number()",
						"xml_get_current_line_number()",
						"xml_get_error_code()",
						"xml_parse()",
						"xml_parse_into_struct()",
						"xml_parser_create_ns()",
						"xml_parser_create()",
						"xml_parser_free()",
						"xml_parser_get_option()",
						"xml_parser_set_option()",
						"xml_set_character_data_handler()",
						"xml_set_default_handler()",
						"xml_set_element_handler()",
						"xml_set_end_namespace_decl_handler()",
						"xml_set_external_entity_ref_handler()",
						"xml_set_notation_decl_handler()",
						"xml_set_object()",
						"xml_set_processing_instruction_handler()",
						"xml_set_start_namespace_decl_handler()",
						"xml_set_unparsed_entity_decl_handler()"
					]
				},
				{
					title: "Constants",
					values: [
						"XML_ERROR_NONE",
						"XML_ERROR_NO_MEMORY",
						"XML_ERROR_SYNTAX",
						"XML_ERROR_NO_ELEMENTS",
						"XML_ERROR_INVALID_TOKEN",
						"XML_ERROR_UNCLOSED_TOKEN",
						"XML_ERROR_PARTIAL_CHAR",
						"XML_ERROR_TAG_MISMATCH",
						"XML_ERROR_DUPLICATE_ATTRIBUTE",
						"XML_ERROR_JUNK_AFTER_DOC_ELEMENT",
						"XML_ERROR_PARAM_ENTITY_REF",
						"XML_ERROR_UNDEFINED_ENTITY",
						"XML_ERROR_RECURSIVE_ENTITY_REF",
						"XML_ERROR_ASYNC_ENTITY",
						"XML_ERROR_BAD_CHAR_REF",
						"XML_ERROR_BINARY_ENTITY_REF",
						"XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF",
						"XML_ERROR_MISPLACED_XML_PI",
						"XML_ERROR_UNKNOWN_ENCODING",
						"XML_ERROR_INCORRECT_ENCODING",
						"XML_ERROR_UNCLOSED_CDATA_SECTION",
						"XML_ERROR_EXTERNAL_ENTITY_HANDLING",
						"XML_OPTION_CASE_FOLDING",
						"XML_OPTION_TARGET_ENCODING",
						"XML_OPTION_SKIP_TAGSTART",
						"XML_OPTION_SKIP_WHITE"
					]
				}
			]
		},
		{
			title: "Directory",
			items: [
				{
					title: "Functions",
					values: [
						"chdir()",
						"chroot()",
						"dir()",
						"closedir()",
						"getcwd()",
						"opendir()",
						"readdir()",
						"rewinddir()",
						"scandir()"
					]
				},
				{
					title: "Constants",
					values: [
						"DIRECTORY_SEPARATOR",
						"PATH_SEPARATOR"
					]
				}
			]
		},
		{
			title: "Math",
			items: [
				{
					title: "Functions",
					values: [
						"abs()",
						"acos()",
						"acosh()",
						"asin()",
						"asinh()",
						"atan()",
						"atan2()",
						"atanh()",
						"base_convert()",
						"bindec()",
						"ceil()",
						"cos()",
						"cosh()",
						"decbin()",
						"dechex()",
						"decoct()",
						"deg2rad()",
						"exp()",
						"expm1()",
						"floor()",
						"fmod()",
						"getrandmax()",
						"hexdec()",
						"hypot()",
						"is_finite()",
						"is_infinite()",
						"is_nan()",
						"lcg_value()",
						"log()",
						"log10()",
						"log1p()",
						"max()",
						"min()",
						"mt_getrandmax()",
						"mt_rand()",
						"mt_srand()",
						"octdec()",
						"pi()",
						"pow()",
						"rad2deg()",
						"rand()",
						"round()",
						"sin()",
						"sinh()",
						"sqrt()",
						"srand()",
						"tan()",
						"tanh()"
					]
				},
				{
					title: "Constants",
					values: [
						"M_E",
						"M_EULER",
						"M_LNPI",
						"M_LN2",
						"M_LN10",
						"M_LOG2E",
						"M_LOG10E",
						"M_PI",
						"M_PI_2",
						"M_PI_4",
						"M_1_PI",
						"M_2_PI",
						"M_SQRTPI",
						"M_2_SQRTPI",
						"M_SQRT1_2",
						"M_SQRT2",
						"M_SQRT3"
					]
				}
			]
		},
		{
			title: "Libxml",
			items: [
				{
					title: "Functions",
					values: [
						"libxml_clear_errors()",
						"libxml_get_errors()",
						"libxml_get_last_error()",
						"libxml_set_streams_context()",
						"libxml_use_internal_errors()"
					]
				},
				{
					title: "Constants",
					values: [
						"LIBXML_COMPACT",
						"LIBXML_DTDATTR",
						"LIBXML_DTDLOAD",
						"LIBXML_DTDVALID",
						"LIBXML_NOBLANKS",
						"LIBXML_NOCDATA",
						"LIBXML_NOEMPTYTAG",
						"LIBXML_NOENT",
						"LIBXML_NOERROR",
						"LIBXML_NONET",
						"LIBXML_NOWARNING",
						"LIBXML_NOXMLDECL",
						"LIBXML_NSCLEAN",
						"LIBXML_XINCLUDE",
						"LIBXML_ERR_ERROR",
						"LIBXML_ERR_FATAL",
						"LIBXML_ERR_NONE",
						"LIBXML_ERR_WARNING",
						"LIBXML_VERSION",
						"LIBXML_DOTTED_VERSION"
					]
				}
			]
		}
	];
};
